{"ast":null,"code":"var _jsxFileName = \"/Users/james/Desktop/Word_Game/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Button, Container, CssBaseline, Typography } from '@mui/material';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst emotionsData = [{\n  emotion: \"Happy\",\n  emoji: \"ðŸ˜Š\"\n}, {\n  emotion: \"Sad\",\n  emoji: \"ðŸ˜¢\"\n}, {\n  emotion: \"Angry\",\n  emoji: \"ðŸ˜ \"\n}\n// Add emoji for other emotions\n];\nconst theme = createTheme();\nconst App = () => {\n  _s();\n  const [currentEmotionData, setCurrentEmotionData] = useState({});\n  const [options, setOptions] = useState([]);\n  useEffect(() => {\n    startGame();\n  }, []); // Run once on component mount\n\n  const startGame = () => {\n    // Choose a random emotion data\n    const newEmotionData = emotionsData[Math.floor(Math.random() * emotionsData.length)];\n    setCurrentEmotionData(newEmotionData);\n\n    // Generate two random emotions for options\n    const newOptions = generateRandomOptions(newEmotionData.emotion);\n    setOptions(newOptions);\n  };\n  const generateRandomOptions = correctEmotion => {\n    const newOptions = [];\n    while (newOptions.length < 2) {\n      const randomEmotionData = emotionsData[Math.floor(Math.random() * emotionsData.length)];\n      if (randomEmotionData.emotion !== correctEmotion && !newOptions.includes(randomEmotionData.emotion)) {\n        newOptions.push(randomEmotionData.emotion);\n      }\n    }\n    newOptions.push(correctEmotion); // Add the correct emotion to options\n    return shuffleArray(newOptions);\n  };\n  const shuffleArray = array => {\n    // Fisher-Yates shuffle algorithm\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n  };\n  const checkAnswer = selectedEmotion => {\n    if (selectedEmotion === currentEmotionData.emotion) {\n      alert(\"Correct! Let's try another one.\");\n      startGame();\n    } else {\n      alert(\"Incorrect. Try again!\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      component: \"main\",\n      maxWidth: \"xs\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"paper\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h1\",\n          variant: \"h5\",\n          id: \"game-title\",\n          children: \"Word Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h2\",\n          variant: \"h6\",\n          id: \"emotion-word\",\n          children: currentEmotionData.emoji\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"options\",\n          children: options.map((option, index) => /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"success\" // Green color\n            ,\n            onClick: () => checkAnswer(option),\n            fullWidth: true,\n            children: option\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"example-images\",\n          children: emotionsData.map((emotionData, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"example-image\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              role: \"img\",\n              \"aria-label\": emotionData.emotion,\n              style: {\n                fontSize: '36px'\n              },\n              children: emotionData.emoji\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"ZYYExMiNu8wzjk9EgnM+Kiu/hqU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Button","Container","CssBaseline","Typography","createTheme","ThemeProvider","jsxDEV","_jsxDEV","emotionsData","emotion","emoji","theme","App","_s","currentEmotionData","setCurrentEmotionData","options","setOptions","startGame","newEmotionData","Math","floor","random","length","newOptions","generateRandomOptions","correctEmotion","randomEmotionData","includes","push","shuffleArray","array","i","j","checkAnswer","selectedEmotion","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","component","maxWidth","className","variant","id","map","option","index","color","onClick","fullWidth","emotionData","role","style","fontSize","_c","$RefreshReg$"],"sources":["/Users/james/Desktop/Word_Game/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Button, Container, CssBaseline, Typography } from '@mui/material';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport './App.css';\n\nconst emotionsData = [\n  { emotion: \"Happy\", emoji: \"ðŸ˜Š\" },\n  { emotion: \"Sad\", emoji: \"ðŸ˜¢\" },\n  { emotion: \"Angry\", emoji: \"ðŸ˜ \" },\n  // Add emoji for other emotions\n];\n\nconst theme = createTheme();\n\nconst App = () => {\n  const [currentEmotionData, setCurrentEmotionData] = useState({});\n  const [options, setOptions] = useState([]);\n\n  useEffect(() => {\n    startGame();\n  }, []); // Run once on component mount\n\n  const startGame = () => {\n    // Choose a random emotion data\n    const newEmotionData = emotionsData[Math.floor(Math.random() * emotionsData.length)];\n    setCurrentEmotionData(newEmotionData);\n\n    // Generate two random emotions for options\n    const newOptions = generateRandomOptions(newEmotionData.emotion);\n    setOptions(newOptions);\n  };\n\n  const generateRandomOptions = (correctEmotion) => {\n    const newOptions = [];\n    \n    while (newOptions.length < 2) {\n      const randomEmotionData = emotionsData[Math.floor(Math.random() * emotionsData.length)];\n      if (randomEmotionData.emotion !== correctEmotion && !newOptions.includes(randomEmotionData.emotion)) {\n        newOptions.push(randomEmotionData.emotion);\n      }\n    }\n\n    newOptions.push(correctEmotion); // Add the correct emotion to options\n    return shuffleArray(newOptions);\n  };\n\n  const shuffleArray = (array) => {\n    // Fisher-Yates shuffle algorithm\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n  };\n\n  const checkAnswer = (selectedEmotion) => {\n    if (selectedEmotion === currentEmotionData.emotion) {\n      alert(\"Correct! Let's try another one.\");\n      startGame();\n    } else {\n      alert(\"Incorrect. Try again!\");\n    }\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Container component=\"main\" maxWidth=\"xs\">\n        <div className=\"paper\">\n          <Typography component=\"h1\" variant=\"h5\" id=\"game-title\">\n            Word Game\n          </Typography>\n          <Typography component=\"h2\" variant=\"h6\" id=\"emotion-word\">\n            {currentEmotionData.emoji}\n          </Typography>\n          <div id=\"options\">\n            {options.map((option, index) => (\n              <Button\n                key={index}\n                variant=\"contained\"\n                color=\"success\" // Green color\n                onClick={() => checkAnswer(option)}\n                fullWidth\n              >\n                {option}\n              </Button>\n            ))}\n          </div>\n          <div id=\"example-images\">\n            {emotionsData.map((emotionData, index) => (\n              <div key={index} className=\"example-image\">\n                <span role=\"img\" aria-label={emotionData.emotion} style={{ fontSize: '36px' }}>\n                  {emotionData.emoji}\n                </span>\n              </div>\n            ))}\n          </div>\n        </div>\n      </Container>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}