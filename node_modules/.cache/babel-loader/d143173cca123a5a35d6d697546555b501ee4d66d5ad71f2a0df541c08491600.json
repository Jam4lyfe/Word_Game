{"ast":null,"code":"var _jsxFileName = \"/Users/james/Desktop/Word_Game/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Button, Container, CssBaseline, Typography } from '@mui/material';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport './App.css';\nimport row from 'react';\nimport { Box } from '@mui/system';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst emotions = [\"Happy\", \"Sad\", \"Angry\", \"Surprised\", \"Excited\", \"Fearful\", \"Relaxed\", \"Confused\"];\nconst theme = createTheme();\nconst App = () => {\n  _s();\n  const [currentEmotion, setCurrentEmotion] = useState('');\n  const [options, setOptions] = useState([]);\n  const [score, setScore] = useState(0);\n  const [highScore, setHighScore] = useState(0);\n  useEffect(() => {\n    startGame();\n  }, []); // Run once on component mount\n\n  const startGame = () => {\n    // Choose a random emotion\n    const newEmotion = emotions[Math.floor(Math.random() * emotions.length)];\n    setCurrentEmotion(newEmotion);\n\n    // Generate two random emotions for options\n    const newOptions = generateRandomOptions(newEmotion);\n    setOptions(newOptions);\n  };\n  const generateRandomOptions = correctEmotion => {\n    const newOptions = [];\n    while (newOptions.length < 2) {\n      const randomEmotion = emotions[Math.floor(Math.random() * emotions.length)];\n      if (randomEmotion !== correctEmotion && !newOptions.includes(randomEmotion)) {\n        newOptions.push(randomEmotion);\n      }\n    }\n    newOptions.push(correctEmotion); // Add the correct emotion to options\n    return shuffleArray(newOptions);\n  };\n  const shuffleArray = array => {\n    // Fisher-Yates shuffle algorithm\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n  };\n  const checkAnswer = selectedEmotion => {\n    const emotionWordElement = document.getElementById('emotion-word');\n    if (selectedEmotion === currentEmotion) {\n      emotionWordElement.classList.add('correct');\n      setTimeout(() => {\n        emotionWordElement.classList.remove('correct');\n        startGame();\n        setScore(score + 1); // Increment score for a correct answer\n        // Check and update high score\n        if (score + 1 > highScore) {\n          setHighScore(score + 1);\n        }\n      }, 500);\n    } else {\n      const randomRotation = Math.random() < 0.5 ? -10 : 10;\n      emotionWordElement.style.transform = `rotate(${randomRotation}deg)`;\n      emotionWordElement.classList.add('incorrect');\n      setTimeout(() => {\n        emotionWordElement.classList.remove('incorrect');\n        emotionWordElement.style.transform = '';\n        resetGame();\n      }, 500);\n    }\n  };\n  const resetGame = () => {\n    setScore(0); // Reset score for an incorrect answer\n    startGame();\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"game-container\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h1\",\n          variant: \"h5\",\n          id: \"score\",\n          children: [\"Score: \", score]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h1\",\n          variant: \"h5\",\n          id: \"high-score\",\n          children: [\"High Score: \", highScore]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"paper\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h2\",\n          variant: \"h6\",\n          id: \"game-title\",\n          children: \"Word Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h3\",\n          variant: \"h6\",\n          id: \"emotion-word\",\n          children: currentEmotion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"options\",\n          children: options.map((option, index) => /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"success\",\n            onClick: () => checkAnswer(option),\n            fullWidth: true,\n            children: option\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"DqrsCFh7Yca4TlF2byr6/IjjXcg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Button","Container","CssBaseline","Typography","createTheme","ThemeProvider","row","Box","jsxDEV","_jsxDEV","emotions","theme","App","_s","currentEmotion","setCurrentEmotion","options","setOptions","score","setScore","highScore","setHighScore","startGame","newEmotion","Math","floor","random","length","newOptions","generateRandomOptions","correctEmotion","randomEmotion","includes","push","shuffleArray","array","i","j","checkAnswer","selectedEmotion","emotionWordElement","document","getElementById","classList","add","setTimeout","remove","randomRotation","style","transform","resetGame","children","fileName","_jsxFileName","lineNumber","columnNumber","id","component","variant","className","map","option","index","color","onClick","fullWidth","_c","$RefreshReg$"],"sources":["/Users/james/Desktop/Word_Game/src/App.js"],"sourcesContent":["import React,  { useState, useEffect } from 'react';\nimport { Button, Container, CssBaseline, Typography } from '@mui/material';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport './App.css';\nimport row from 'react';\nimport { Box } from '@mui/system';\n\nconst emotions = [\n  \"Happy\", \"Sad\", \"Angry\", \"Surprised\", \"Excited\", \"Fearful\", \"Relaxed\", \"Confused\"\n];\n\nconst theme = createTheme();\n\nconst App = () => {\n  const [currentEmotion, setCurrentEmotion] = useState('');\n  const [options, setOptions] = useState([]);\n  const [score, setScore] = useState(0);\n  const [highScore, setHighScore] = useState(0);\n\n  useEffect(() => {\n    startGame();\n  }, []); // Run once on component mount\n\n  const startGame = () => {\n    // Choose a random emotion\n    const newEmotion = emotions[Math.floor(Math.random() * emotions.length)];\n    setCurrentEmotion(newEmotion);\n\n    // Generate two random emotions for options\n    const newOptions = generateRandomOptions(newEmotion);\n    setOptions(newOptions);\n  };\n\n  const generateRandomOptions = (correctEmotion) => {\n    const newOptions = [];\n    \n    while (newOptions.length < 2) {\n      const randomEmotion = emotions[Math.floor(Math.random() * emotions.length)];\n      if (randomEmotion !== correctEmotion && !newOptions.includes(randomEmotion)) {\n        newOptions.push(randomEmotion);\n      }\n    }\n\n    newOptions.push(correctEmotion); // Add the correct emotion to options\n    return shuffleArray(newOptions);\n  };\n\n  const shuffleArray = (array) => {\n    // Fisher-Yates shuffle algorithm\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n  };\n\n  const checkAnswer = (selectedEmotion) => {\n    const emotionWordElement = document.getElementById('emotion-word');\n  \n    if (selectedEmotion === currentEmotion) {\n      emotionWordElement.classList.add('correct');\n  \n      setTimeout(() => {\n        emotionWordElement.classList.remove('correct');\n        startGame();\n        setScore(score + 1); // Increment score for a correct answer\n        // Check and update high score\n        if (score + 1 > highScore) {\n          setHighScore(score + 1);\n        }\n      }, 500);\n    } else {\n      const randomRotation = Math.random() < 0.5 ? -10 : 10;\n      \n      emotionWordElement.style.transform = `rotate(${randomRotation}deg)`;\n  \n      emotionWordElement.classList.add('incorrect');\n  \n      setTimeout(() => {\n        emotionWordElement.classList.remove('incorrect');\n        emotionWordElement.style.transform = '';\n        resetGame();\n      }, 500);\n    }\n  };\n  \n  const resetGame = () => {\n    setScore(0); // Reset score for an incorrect answer\n    startGame();\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <div id=\"game-container\">\n        <Box>\n        <Typography component=\"h1\" variant=\"h5\" id=\"score\">\n          Score: {score}\n        </Typography>\n        <Typography component=\"h1\" variant=\"h5\" id=\"high-score\">\n          High Score: {highScore}\n        </Typography>\n        </Box>\n        <div className=\"paper\">\n          <Typography component=\"h2\" variant=\"h6\" id=\"game-title\">\n            Word Game\n          </Typography>\n          <Typography component=\"h3\" variant=\"h6\" id=\"emotion-word\">\n            {currentEmotion}\n          </Typography>\n          <div id=\"options\">\n            {options.map((option, index) => (\n              <Button\n                key={index}\n                variant=\"contained\"\n                color=\"success\"\n                onClick={() => checkAnswer(option)}\n                fullWidth\n              >\n                {option}\n              </Button>\n            ))}\n          </div>\n        </div>\n      </div>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAKC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACnD,SAASC,MAAM,EAAEC,SAAS,EAAEC,WAAW,EAAEC,UAAU,QAAQ,eAAe;AAC1E,SAASC,WAAW,EAAEC,aAAa,QAAQ,sBAAsB;AACjE,OAAO,WAAW;AAClB,OAAOC,GAAG,MAAM,OAAO;AACvB,SAASC,GAAG,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,QAAQ,GAAG,CACf,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,WAAW,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,UAAU,CAClF;AAED,MAAMC,KAAK,GAAGP,WAAW,CAAC,CAAC;AAE3B,MAAMQ,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACkB,OAAO,EAAEC,UAAU,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACoB,KAAK,EAAEC,QAAQ,CAAC,GAAGrB,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACsB,SAAS,EAAEC,YAAY,CAAC,GAAGvB,QAAQ,CAAC,CAAC,CAAC;EAE7CC,SAAS,CAAC,MAAM;IACduB,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,MAAMA,SAAS,GAAGA,CAAA,KAAM;IACtB;IACA,MAAMC,UAAU,GAAGb,QAAQ,CAACc,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGhB,QAAQ,CAACiB,MAAM,CAAC,CAAC;IACxEZ,iBAAiB,CAACQ,UAAU,CAAC;;IAE7B;IACA,MAAMK,UAAU,GAAGC,qBAAqB,CAACN,UAAU,CAAC;IACpDN,UAAU,CAACW,UAAU,CAAC;EACxB,CAAC;EAED,MAAMC,qBAAqB,GAAIC,cAAc,IAAK;IAChD,MAAMF,UAAU,GAAG,EAAE;IAErB,OAAOA,UAAU,CAACD,MAAM,GAAG,CAAC,EAAE;MAC5B,MAAMI,aAAa,GAAGrB,QAAQ,CAACc,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGhB,QAAQ,CAACiB,MAAM,CAAC,CAAC;MAC3E,IAAII,aAAa,KAAKD,cAAc,IAAI,CAACF,UAAU,CAACI,QAAQ,CAACD,aAAa,CAAC,EAAE;QAC3EH,UAAU,CAACK,IAAI,CAACF,aAAa,CAAC;MAChC;IACF;IAEAH,UAAU,CAACK,IAAI,CAACH,cAAc,CAAC,CAAC,CAAC;IACjC,OAAOI,YAAY,CAACN,UAAU,CAAC;EACjC,CAAC;EAED,MAAMM,YAAY,GAAIC,KAAK,IAAK;IAC9B;IACA,KAAK,IAAIC,CAAC,GAAGD,KAAK,CAACR,MAAM,GAAG,CAAC,EAAES,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MACzC,MAAMC,CAAC,GAAGb,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,IAAIU,CAAC,GAAG,CAAC,CAAC,CAAC;MAC7C,CAACD,KAAK,CAACC,CAAC,CAAC,EAAED,KAAK,CAACE,CAAC,CAAC,CAAC,GAAG,CAACF,KAAK,CAACE,CAAC,CAAC,EAAEF,KAAK,CAACC,CAAC,CAAC,CAAC;IAC7C;IACA,OAAOD,KAAK;EACd,CAAC;EAED,MAAMG,WAAW,GAAIC,eAAe,IAAK;IACvC,MAAMC,kBAAkB,GAAGC,QAAQ,CAACC,cAAc,CAAC,cAAc,CAAC;IAElE,IAAIH,eAAe,KAAKzB,cAAc,EAAE;MACtC0B,kBAAkB,CAACG,SAAS,CAACC,GAAG,CAAC,SAAS,CAAC;MAE3CC,UAAU,CAAC,MAAM;QACfL,kBAAkB,CAACG,SAAS,CAACG,MAAM,CAAC,SAAS,CAAC;QAC9CxB,SAAS,CAAC,CAAC;QACXH,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;QACrB;QACA,IAAIA,KAAK,GAAG,CAAC,GAAGE,SAAS,EAAE;UACzBC,YAAY,CAACH,KAAK,GAAG,CAAC,CAAC;QACzB;MACF,CAAC,EAAE,GAAG,CAAC;IACT,CAAC,MAAM;MACL,MAAM6B,cAAc,GAAGvB,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,EAAE,GAAG,EAAE;MAErDc,kBAAkB,CAACQ,KAAK,CAACC,SAAS,GAAI,UAASF,cAAe,MAAK;MAEnEP,kBAAkB,CAACG,SAAS,CAACC,GAAG,CAAC,WAAW,CAAC;MAE7CC,UAAU,CAAC,MAAM;QACfL,kBAAkB,CAACG,SAAS,CAACG,MAAM,CAAC,WAAW,CAAC;QAChDN,kBAAkB,CAACQ,KAAK,CAACC,SAAS,GAAG,EAAE;QACvCC,SAAS,CAAC,CAAC;MACb,CAAC,EAAE,GAAG,CAAC;IACT;EACF,CAAC;EAED,MAAMA,SAAS,GAAGA,CAAA,KAAM;IACtB/B,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;IACbG,SAAS,CAAC,CAAC;EACb,CAAC;EAED,oBACEb,OAAA,CAACJ,aAAa;IAACM,KAAK,EAAEA,KAAM;IAAAwC,QAAA,gBAC1B1C,OAAA,CAACP,WAAW;MAAAkD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACf9C,OAAA;MAAK+C,EAAE,EAAC,gBAAgB;MAAAL,QAAA,gBACtB1C,OAAA,CAACF,GAAG;QAAA4C,QAAA,gBACJ1C,OAAA,CAACN,UAAU;UAACsD,SAAS,EAAC,IAAI;UAACC,OAAO,EAAC,IAAI;UAACF,EAAE,EAAC,OAAO;UAAAL,QAAA,GAAC,SAC1C,EAACjC,KAAK;QAAA;UAAAkC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACb9C,OAAA,CAACN,UAAU;UAACsD,SAAS,EAAC,IAAI;UAACC,OAAO,EAAC,IAAI;UAACF,EAAE,EAAC,YAAY;UAAAL,QAAA,GAAC,cAC1C,EAAC/B,SAAS;QAAA;UAAAgC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACZ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC,eACN9C,OAAA;QAAKkD,SAAS,EAAC,OAAO;QAAAR,QAAA,gBACpB1C,OAAA,CAACN,UAAU;UAACsD,SAAS,EAAC,IAAI;UAACC,OAAO,EAAC,IAAI;UAACF,EAAE,EAAC,YAAY;UAAAL,QAAA,EAAC;QAExD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eACb9C,OAAA,CAACN,UAAU;UAACsD,SAAS,EAAC,IAAI;UAACC,OAAO,EAAC,IAAI;UAACF,EAAE,EAAC,cAAc;UAAAL,QAAA,EACtDrC;QAAc;UAAAsC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,eACb9C,OAAA;UAAK+C,EAAE,EAAC,SAAS;UAAAL,QAAA,EACdnC,OAAO,CAAC4C,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBACzBrD,OAAA,CAACT,MAAM;YAEL0D,OAAO,EAAC,WAAW;YACnBK,KAAK,EAAC,SAAS;YACfC,OAAO,EAAEA,CAAA,KAAM1B,WAAW,CAACuB,MAAM,CAAE;YACnCI,SAAS;YAAAd,QAAA,EAERU;UAAM,GANFC,KAAK;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAOJ,CACT;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAEpB,CAAC;AAAC1C,EAAA,CAlHID,GAAG;AAAAsD,EAAA,GAAHtD,GAAG;AAoHT,eAAeA,GAAG;AAAC,IAAAsD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}