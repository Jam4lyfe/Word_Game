{"ast":null,"code":"var _jsxFileName = \"/Users/james/Desktop/Word_Game/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Button, Container, CssBaseline, Typography } from '@mui/material';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst emotionsData = [{\n  emotion: \"Happy\",\n  emoji: \"ðŸ˜Š\",\n  imageUrl: \"https://example.com/happy-image.jpg\"\n}, {\n  emotion: \"Sad\",\n  emoji: \"ðŸ˜¢\",\n  imageUrl: \"https://example.com/sad-image.jpg\"\n}, {\n  emotion: \"Angry\",\n  emoji: \"ðŸ˜ \",\n  imageUrl: \"https://example.com/angry-image.jpg\"\n}\n// Add data for other emotions\n];\nconst theme = createTheme();\nconst App = () => {\n  _s();\n  const [currentEmotionData, setCurrentEmotionData] = useState({});\n  const [options, setOptions] = useState([]);\n  useEffect(() => {\n    startGame();\n  }, []); // Run once on component mount\n\n  const startGame = () => {\n    // Choose a random emotion data\n    const newEmotionData = emotionsData[Math.floor(Math.random() * emotionsData.length)];\n    setCurrentEmotionData(newEmotionData);\n\n    // Generate two random emotions for options\n    const newOptions = generateRandomOptions(newEmotionData.emotion);\n    setOptions(newOptions);\n  };\n  const generateRandomOptions = correctEmotion => {\n    const newOptions = [];\n    while (newOptions.length < 2) {\n      const randomEmotionData = emotionsData[Math.floor(Math.random() * emotionsData.length)];\n      if (randomEmotionData.emotion !== correctEmotion && !newOptions.some(option => option.emotion === randomEmotionData.emotion)) {\n        newOptions.push(randomEmotionData);\n      }\n    }\n    newOptions.push({\n      emotion: correctEmotion,\n      emoji: currentEmotionData.emoji,\n      imageUrl: currentEmotionData.imageUrl\n    });\n    return shuffleArray(newOptions);\n  };\n  const shuffleArray = array => {\n    // Fisher-Yates shuffle algorithm\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n  };\n  const checkAnswer = selectedEmotion => {\n    if (selectedEmotion.emotion === currentEmotionData.emotion) {\n      alert(\"Correct! Let's try another one.\");\n      startGame();\n    } else {\n      alert(\"Incorrect. Try again!\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      component: \"main\",\n      maxWidth: \"xs\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"paper\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h1\",\n          variant: \"h5\",\n          id: \"game-title\",\n          children: \"Word Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"options\",\n          children: options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              align: \"center\",\n              children: option.emotion\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"success\" // Green color\n              ,\n              onClick: () => checkAnswer(option),\n              fullWidth: true,\n              children: option.emoji\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: option.imageUrl,\n              alt: option.emotion,\n              style: {\n                width: '100%',\n                marginTop: '10px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"ZYYExMiNu8wzjk9EgnM+Kiu/hqU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Button","Container","CssBaseline","Typography","createTheme","ThemeProvider","jsxDEV","_jsxDEV","emotionsData","emotion","emoji","imageUrl","theme","App","_s","currentEmotionData","setCurrentEmotionData","options","setOptions","startGame","newEmotionData","Math","floor","random","length","newOptions","generateRandomOptions","correctEmotion","randomEmotionData","some","option","push","shuffleArray","array","i","j","checkAnswer","selectedEmotion","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","component","maxWidth","className","variant","id","map","index","align","color","onClick","fullWidth","src","alt","style","width","marginTop","_c","$RefreshReg$"],"sources":["/Users/james/Desktop/Word_Game/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Button, Container, CssBaseline, Typography } from '@mui/material';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport './App.css';\n\nconst emotionsData = [\n  { emotion: \"Happy\", emoji: \"ðŸ˜Š\", imageUrl: \"https://example.com/happy-image.jpg\" },\n  { emotion: \"Sad\", emoji: \"ðŸ˜¢\", imageUrl: \"https://example.com/sad-image.jpg\" },\n  { emotion: \"Angry\", emoji: \"ðŸ˜ \", imageUrl: \"https://example.com/angry-image.jpg\" },\n  // Add data for other emotions\n];\n\nconst theme = createTheme();\n\nconst App = () => {\n  const [currentEmotionData, setCurrentEmotionData] = useState({});\n  const [options, setOptions] = useState([]);\n\n  useEffect(() => {\n    startGame();\n  }, []); // Run once on component mount\n\n  const startGame = () => {\n    // Choose a random emotion data\n    const newEmotionData = emotionsData[Math.floor(Math.random() * emotionsData.length)];\n    setCurrentEmotionData(newEmotionData);\n\n    // Generate two random emotions for options\n    const newOptions = generateRandomOptions(newEmotionData.emotion);\n    setOptions(newOptions);\n  };\n\n  const generateRandomOptions = (correctEmotion) => {\n    const newOptions = [];\n    \n    while (newOptions.length < 2) {\n      const randomEmotionData = emotionsData[Math.floor(Math.random() * emotionsData.length)];\n      if (randomEmotionData.emotion !== correctEmotion && !newOptions.some(option => option.emotion === randomEmotionData.emotion)) {\n        newOptions.push(randomEmotionData);\n      }\n    }\n\n    newOptions.push({ emotion: correctEmotion, emoji: currentEmotionData.emoji, imageUrl: currentEmotionData.imageUrl });\n    return shuffleArray(newOptions);\n  };\n\n  const shuffleArray = (array) => {\n    // Fisher-Yates shuffle algorithm\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n  };\n\n  const checkAnswer = (selectedEmotion) => {\n    if (selectedEmotion.emotion === currentEmotionData.emotion) {\n      alert(\"Correct! Let's try another one.\");\n      startGame();\n    } else {\n      alert(\"Incorrect. Try again!\");\n    }\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Container component=\"main\" maxWidth=\"xs\">\n        <div className=\"paper\">\n          <Typography component=\"h1\" variant=\"h5\" id=\"game-title\">\n            Word Game\n          </Typography>\n          <div id=\"options\">\n            {options.map((option, index) => (\n              <div key={index}>\n                <Typography variant=\"body2\" align=\"center\">\n                  {option.emotion}\n                </Typography>\n                <Button\n                  variant=\"contained\"\n                  color=\"success\" // Green color\n                  onClick={() => checkAnswer(option)}\n                  fullWidth\n                >\n                  {option.emoji}\n                </Button>\n                <img\n                  src={option.imageUrl}\n                  alt={option.emotion}\n                  style={{ width: '100%', marginTop: '10px' }}\n                />\n              </div>\n            ))}\n          </div>\n        </div>\n      </Container>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}